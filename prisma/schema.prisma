// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String   @db.Text
  content     String   @db.Text
  images      Image[]
  area        Int?
  location    String?
  price       Int?
  features    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String   @db.Text
  content     String   @db.Text
  image       String
  date        DateTime @default(now())
  author      String
  category    String
  readTime    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  alt       String?
  projectId Int?
  project   Project? @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  message   String   @db.Text
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  photo     String
  createdAt DateTime @default(now())
}

model Faq {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
